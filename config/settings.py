"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$r4i7=qy1up6b+^=a3f7hvdcpk=#4j^ct=%q1buyad!@_vklp!'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# ALLOWED_HOSTS = ['199.203.18.49','localhost','127.0.0.1','127.0.0.1\sqlexpress','192.168.3.27']
ALLOWED_HOSTS = ['172.16.10.27','localhost','127.0.0.1','178.252.151.59','ttac.qrcode.firooze.com']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'crispy_bootstrap4',
    'rest_framework',
    # 'rest_framework.authtoken',
    'rest_authtoken',
    'maintenancemode', 
    'maintenance_mode',
    'bootstrap4',
    'uploader',
    'order',   
    'barcode',   
    'inquiryHistory',
    'customer',
    'account',
    'products',
    'InspectionDetails',
    'inspections',
    'Shipping',
    'ShippingDetails',
    'Tasks',
    'companies',
    'clearcache',
]

MIDDLEWARE = [
    'maintenance_mode.middleware.MaintenanceModeMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',

]
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            str(BASE_DIR.joinpath('Templates'))
            ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
]       
 },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql_psycopg2',
    #     'NAME': 'amf_frz_db2',
    #     'USER': 'djangouser',
    #     'PASSWORD': 'amf@psql2022',
    #     'HOST': 'localhost',
    #     'PORT': '',
    # }
# DATABASES = {
# 'default': {
# 'ENGINE': 'mssql',
# 'NAME': 'amf_db',
# 'USER': 'sa',
# 'PASSWORD': 'amf@sql',
# 'HOST': '127.0.0.1\\SQLEXPRESS',
# 'PORT': '',
# 'OPTIONS': {
# 'driver': 'ODBC Driver 17 for SQL Server',
# },
# }
# }
DATABASES = {
'default': {
'ENGINE': 'mssql',
'NAME': 'amf_db',
'USER': 'sa',
'PASSWORD': 'amf@sql2019',
'HOST': '172.16.10.27',
'PORT': '1433',
'OPTIONS': {
'driver': 'ODBC Driver 17 for SQL Server',
},
}
}
# DATABASES = {
#    'default': {
#        'ENGINE': 'sql_server.pyodbc',
#        'NAME': 'amf_db',
#        'USER': 'sa',
#        'PASSWORD': 'amf@sql',
#        'HOST': '127.0.0.1',
#        'PORT': '1433',
#    }
# }


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.ScryptPasswordHasher',
]
# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL='media/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATIC_URL  = 'static/'
str(BASE_DIR.joinpath('templates')) 
#str(BASE_DIR.joinpath('media'))
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/


LOGIN_REDIRECT_URL='panel'
LIOGOUT_REDIRECT_URL='panel'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL='account.CustomUser'

CRISPY_TEMPLATE_PACK='bootstrap4'

EMAIL_BACKEND='djando.core.mail.backends.console.EmailBakcend'
PROJECT_ROOT = os.path.join(os.path.dirname(__file__), '..')
SITE_ROOT = PROJECT_ROOT


MEDIA_ROOT = os.path.join(SITE_ROOT, 'media')
MEDIA_URL = '/media/'

STATIC_ROOT = os.path.join(SITE_ROOT, 'static')
#STATICFILES_DIRS = STATICFILES_DIRS = (
#os.path.join('Templates', 'static'),
#y
"/home/firooze/static",
#)
STATIC_URL = '/static/'


# STATICFILES_DIRS = (
# #     # Put strings here, like "/home/html/static" or "C:/www/django/static".
# #     # Always use forward slashes, even on Windows.
#       "C:\Hamgom\firooze\Templates",
#       os.path.join(SITE_ROOT, 'staticfiles'),
# )

TEMPLATE_DIRS = (
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
    os.path.join(SITE_ROOT, 'Templates'),
)


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=5000),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=10),
}



# REST_FRAMEWORK = {
# 'DEFAULT_AUTHENTICATION_CLASSES': [
# 'rest_framework.authentication.TokenAuthentication',
# ]
# }
# Enable / disable maintenance mode.
# Default: False
#MAINTENANCE_MODE = True  # or ``False`` and use ``maintenance`` command

# Sequence of URL path regexes to exclude from the maintenance mode.
# Default: ()
#MAINTENANCE_IGNORE_URLS = (
#    r'^/docs/.*',
#    r'^/contact'
#)
